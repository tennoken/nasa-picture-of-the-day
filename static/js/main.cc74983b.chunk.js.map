{"version":3,"sources":["components/Picture.js","api/picture.js","modules/picture.js","container/PictureContainer.js","App.js","modules/index.js","index.js"],"names":["PictureBlock","styled","div","ImageBlock","Image","HdImage","Loading","InputBlock","React","memo","data","loading","onChange","error","useState","open","setOpen","todayDate","Date","toISOString","replace","split","join","style","display","justifyContent","alignItems","margin","padding","type","value","date","max","min","required","media_type","src","url","alt","onClick","title","explanation","hdurl","getPictureApi","a","searchedDate","axios","get","response","getPicture","dispatch","pictureAPI","picture","initialState","state","action","Container","useSelector","useDispatch","useEffect","e","target","GlobalStyle","createGlobalStyle","App","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc74983b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PictureBlock = styled.div`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  margin-top: 100px;\r\n  padding: 20px;\r\n\r\n  & p {\r\n    text-align: left;\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n  }\r\n`;\r\n\r\nconst ImageBlock = styled.div`\r\n  max-width: 500px;\r\n  margin: 30px auto;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  height: 0;\r\n  /* padding %는 부모 너비의 비율   */\r\n  /* 500 : x = 16 : 9   */\r\n  padding-top: 56.25%;\r\n  position: relative;\r\n\r\n  & img {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    cursor: pointer;\r\n  }\r\n\r\n  & iframe {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst HdImage = styled.div`\r\n  position: fixed;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  background: rgba(0, 0, 0, 0.4);\r\n  overflow: auto;\r\n\r\n  @media screen and (max-width: 425px) {\r\n    display: none;\r\n  }\r\n\r\n  & img {\r\n    max-width: 900px;\r\n    max-height: 700px;\r\n    padding: 20px;\r\n    margin: 120px auto;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      max-width: 600px;\r\n      max-height: 400px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Loading = styled.div`\r\n  border: 16px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 16px solid #3498db;\r\n  width: 120px;\r\n  height: 120px;\r\n  animation: spin 2s linear infinite;\r\n  margin: 0 auto;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst InputBlock = styled.div`\r\n  padding: 20px;\r\n  text-align: center;\r\n\r\n  & input {\r\n    width: 230px;\r\n    margin: 0 auto;\r\n    height: 50px;\r\n    border-radius: 15px;\r\n    border-style: none;\r\n    border: 1px solid #adb5bd;\r\n    text-align: center;\r\n  }\r\n\r\n  input[type='date']::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Picture = ({ data, loading, error, onChange }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const date = new Date();\r\n  const todayDate = date.toISOString().replace(/T.*/, '').split('-').join('-');\r\n\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          margin: '100px auto',\r\n          padding: '60px 20px',\r\n        }}\r\n      >\r\n        <Loading />\r\n      </div>\r\n    );\r\n  if (!data) return null;\r\n\r\n  return (\r\n    <PictureBlock>\r\n      <InputBlock>\r\n        <input\r\n          type=\"date\"\r\n          onChange={onChange}\r\n          value={data.date}\r\n          max={todayDate}\r\n          min=\"1995-06-16\"\r\n          required\r\n        />\r\n      </InputBlock>\r\n      <ImageBlock>\r\n        <Image>\r\n          {data.media_type === 'image' ? (\r\n            <img\r\n              src={data.url}\r\n              alt={data.url}\r\n              onClick={() => {\r\n                setOpen(true);\r\n              }}\r\n            />\r\n          ) : (\r\n            <iframe title=\"youtube\" src={data.url}></iframe>\r\n          )}\r\n        </Image>\r\n      </ImageBlock>\r\n      <h2>\r\n        {data.title} ({data.date})\r\n      </h2>\r\n      <p>{data.explanation}</p>\r\n      {open && (\r\n        <HdImage\r\n          onClick={() => {\r\n            setOpen(false);\r\n          }}\r\n        >\r\n          <img src={data.hdurl} alt=\"hd_img\" />\r\n        </HdImage>\r\n      )}\r\n    </PictureBlock>\r\n  );\r\n};\r\n\r\nexport default React.memo(Picture);\r\n","import axios from 'axios';\r\n\r\nexport const getPictureApi = async (date = '') => {\r\n  const searchedDate = date ? `&date=${date}` : '';\r\n  const response = await axios.get(\r\n    `https://api.nasa.gov/planetary/apod?api_key=TiCq8KlUDfEuJccadlVrNdHIZacCULGoGJ7hZtZ4${searchedDate}`\r\n  );\r\n\r\n  return response.data;\r\n};\r\n","import * as pictureAPI from '../api/picture';\r\n\r\nconst GET_PICTURE = 'GET_PICTURE';\r\nconst GET_PICTURE_SUCCESS = 'GET_PICTURE_SUCCESS';\r\nconst GET_PICTURE_ERROR = 'GET_PICTURE_ERROR';\r\n\r\nexport const getPicture = (date = '') => async (dispatch) => {\r\n  dispatch({ type: GET_PICTURE }); //요청이 시작\r\n  try {\r\n    const picture = await pictureAPI.getPictureApi(date); // Api를 불러옴\r\n    dispatch({ type: GET_PICTURE_SUCCESS, picture }); // 성공\r\n  } catch (e) {\r\n    dispatch({ type: GET_PICTURE_ERROR, error: e }); // 실패\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  picture: {\r\n    loading: false,\r\n    data: null,\r\n    error: null,\r\n  },\r\n};\r\n\r\nfunction picture(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PICTURE:\r\n      return {\r\n        ...state,\r\n        picture: {\r\n          loading: true,\r\n          data: null,\r\n          error: null,\r\n        },\r\n      };\r\n    case GET_PICTURE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        picture: {\r\n          loading: false,\r\n          data: action.picture,\r\n          error: null,\r\n        },\r\n      };\r\n    case GET_PICTURE_ERROR:\r\n      return {\r\n        ...state,\r\n        picture: {\r\n          loading: false,\r\n          data: null,\r\n          error: action.error,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default picture;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Picture from '../components/Picture';\r\nimport styled from 'styled-components';\r\nimport { useEffect } from 'react';\r\nimport { getPicture } from '../modules/picture';\r\n\r\nconst Container = styled.div`\r\n  max-width: 768px;\r\n  height: auto;\r\n  background: white;\r\n  margin: 0 auto;\r\n  border-radius: 15px;\r\n`;\r\n\r\nconst PictureContainer = () => {\r\n  const { data, loading, error } = useSelector(\r\n    (state) => state.picture.picture\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPicture());\r\n  }, [dispatch]);\r\n\r\n  const onChange = (e) => {\r\n    dispatch(getPicture(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Picture\r\n        data={data}\r\n        loading={loading}\r\n        error={error}\r\n        onChange={onChange}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default React.memo(PictureContainer);\r\n","import React from 'react';\nimport PictureContainer from './container/PictureContainer';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n body {\n   background: rgba(0,50,50,0.2);\n   \n }\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <PictureContainer />\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport picture from './picture';\r\n\r\nconst rootReducer = combineReducers({\r\n  picture,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './modules';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\nimport ReduxThunk from 'redux-thunk';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(ReduxThunk, logger))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}